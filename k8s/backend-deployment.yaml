apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: microsponsoring
  labels:
    app: backend
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        version: v1
    spec:
      containers:
      - name: backend
        image: medbaha/pfebackend:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: db-url
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: db-username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: db-password
        - name: CHECKOUT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: checkout-secret-key
        - name: CHECKOUT_PUBLIC_KEY
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: checkout-public-key
        - name: MAIL_HOST
          value: "smtp.gmail.com"
        - name: MAIL_PORT
          value: "587"
        - name: MAIL_USERNAME
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: mail-username
        - name: MAIL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: mail-password
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: images-storage
          mountPath: /app/images
        - name: invoices-storage
          mountPath: /app/invoices
      volumes:
      - name: images-storage
        persistentVolumeClaim:
          claimName: images-pvc
      - name: invoices-storage
        persistentVolumeClaim:
          claimName: invoices-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: microsponsoring
spec:
  selector:
    app: backend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: images-pvc
  namespace: microsponsoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: invoices-pvc
  namespace: microsponsoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi 